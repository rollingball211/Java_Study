package chapter8;

public class Edit1 {
/*
 	인터페이스(Interface)
 	객체의 사용 방법을 정의한 타입. 객체의 교환성을 높이기떄문에 다형성을 구현하는 매우 중요하는 역할을 함.
 	public interface 인터페이스명.
 	
 	interface 인터페이스명{
 	//상수
 	
 	//추상 메소드
 
 // default 메소드
 //static 타입 메소드명
 
 상수 필드 선언
 인터페이스에서 선언된 필드는 모두 public static final (상수)의 특성으 ㄹ가짐.
 
 추상 메소드 선언
 인터페이스를 통해 호출된 메소드는 최종적으로 객체에서 실행됨.
 인터페이스의 메소드는 실행 블록이 없는 추상 메소드로 선언.
 
 디폴트 메소드 선언
 public 특성을 가짐
 default 리턴타입 메소드명(매개변수,...){}
 
 정적메소드 선언
 static 리턴타입 메소드명(매개변수,...){}
 
 인터페이스 구현
 개발 코드가 인터페이스 메소드를 호출하면 인터페이스는 객체의 메소드를 호출함.
 객체는 인터페이스에서 정의된 추상메소드와 동일한 메소드 이름, 매개타입 , 리턴타입을 가진 실체 메소드를 가지고 있어야함
 이 객체를 인터페이스의 구현 객체라고 함.
 
 인터페이스 타입으로 사용할 수 잇음을 알려주기 위해 클래스 선언부에 implements 키워드 사용.
 구현 클래스에서 인터페이스의 모든 메소드는 기본적으로 public 접근 제한을 갖기 때문에 더 낮은 접근 제한자로 접근 불가
 public 생략 시 에러 발생.
 
 인터페이스 변수 = 구현객체;
 
 */
}
