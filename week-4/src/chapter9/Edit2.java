package chapter9;

public class Edit2 {
/*
  멤버 클래스가 인스턴스 or 정적으로 선언됨에 따라 바깥 클래스의 필드와 메소드에 사용 제한이 걸림
  인스턴스 멤버 클래스는 바깥 클래스의 인스턴스 필드의 초기값이나 인스턴스 메소드에서 객체 생성이 가능하나
  정적에선 불가능.
  정적 멤버는 모든 바깥 클래스에서 객체 생성 가능.
  
  멤버클래스에서 사용 제한.
  인스턴스 멤버 클래스 안에서는 바깥 클래스의 모든 필드와 메소드에 접근 가능.
  정적 멤버 클래스는 정적필드와 메소드에만 접근가능하며 인스턴스 필드와 메소드에는 접근불가능.
  
  로컬클래스에서 사용 제한
  final로 선언된 매개변수와 로컬변수뿐.
  final 특성을 가짐.
  
  중첩 클래스에서 바깥 클래스 참조 얻기
 중첩 클래스에서 this 키워드를 사용하면 중첩 클래스의 객체 참조가 됨.
 바깥 클래스의 객체 참조를 얻으려면 바깥 클래스의 이름을 this앞에 붙이면 됨
 바깥클래스.this.필드
 바깥클래스.this.메소드
 
 중첩 인터페이스. ..?
 클래스의 멤버로 선언된 인터페이스. 
 =>해당 클래스와 긴밀한 관계를 맺는 구현 클래스를 만들기 위해.
 UI프로그래밍에서 이벤트 처리할 목적으로 활용됨.
 
 익명 객체 ..=>?
 이름이 없는 객체.클래스를 상속하거나 인터페이스를 구현해야만 생성할수 있다.
 필드의 초기값 로컬변수의 초기값, 매개변수의 매개값으로 주로 대입됨.
 익명 자식 객체 생성법
 부모클래스[필드|변수] = new 부모클래스(매개값...){
 //필드
 //메소드
  };
  
 */
}
